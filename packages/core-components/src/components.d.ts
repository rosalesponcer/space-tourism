/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { TextSize } from "packages/core-components/src/global/types/TextSize";
export namespace Components {
    interface UiButton {
    }
    interface UiHamburgerButton {
        "first": string;
    }
    interface UiHeader {
    }
    interface UiLogo {
    }
    interface UiNav {
        "last": string;
    }
    interface UiNavItem {
        "name": string;
        "navNumber": string;
    }
    interface UiText {
        "color": 'white' | 'purple' | 'dark';
        "size": TextSize;
        "type": 'block' | 'inline';
        "weight": 'normal' | 'bold';
    }
}
export interface UiHamburgerButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLUiHamburgerButtonElement;
}
declare global {
    interface HTMLUiButtonElement extends Components.UiButton, HTMLStencilElement {
    }
    var HTMLUiButtonElement: {
        prototype: HTMLUiButtonElement;
        new (): HTMLUiButtonElement;
    };
    interface HTMLUiHamburgerButtonElement extends Components.UiHamburgerButton, HTMLStencilElement {
    }
    var HTMLUiHamburgerButtonElement: {
        prototype: HTMLUiHamburgerButtonElement;
        new (): HTMLUiHamburgerButtonElement;
    };
    interface HTMLUiHeaderElement extends Components.UiHeader, HTMLStencilElement {
    }
    var HTMLUiHeaderElement: {
        prototype: HTMLUiHeaderElement;
        new (): HTMLUiHeaderElement;
    };
    interface HTMLUiLogoElement extends Components.UiLogo, HTMLStencilElement {
    }
    var HTMLUiLogoElement: {
        prototype: HTMLUiLogoElement;
        new (): HTMLUiLogoElement;
    };
    interface HTMLUiNavElement extends Components.UiNav, HTMLStencilElement {
    }
    var HTMLUiNavElement: {
        prototype: HTMLUiNavElement;
        new (): HTMLUiNavElement;
    };
    interface HTMLUiNavItemElement extends Components.UiNavItem, HTMLStencilElement {
    }
    var HTMLUiNavItemElement: {
        prototype: HTMLUiNavItemElement;
        new (): HTMLUiNavItemElement;
    };
    interface HTMLUiTextElement extends Components.UiText, HTMLStencilElement {
    }
    var HTMLUiTextElement: {
        prototype: HTMLUiTextElement;
        new (): HTMLUiTextElement;
    };
    interface HTMLElementTagNameMap {
        "ui-button": HTMLUiButtonElement;
        "ui-hamburger-button": HTMLUiHamburgerButtonElement;
        "ui-header": HTMLUiHeaderElement;
        "ui-logo": HTMLUiLogoElement;
        "ui-nav": HTMLUiNavElement;
        "ui-nav-item": HTMLUiNavItemElement;
        "ui-text": HTMLUiTextElement;
    }
}
declare namespace LocalJSX {
    interface UiButton {
    }
    interface UiHamburgerButton {
        "first"?: string;
        "onClickActive"?: (event: UiHamburgerButtonCustomEvent<boolean>) => void;
    }
    interface UiHeader {
    }
    interface UiLogo {
    }
    interface UiNav {
        "last"?: string;
    }
    interface UiNavItem {
        "name"?: string;
        "navNumber"?: string;
    }
    interface UiText {
        "color"?: 'white' | 'purple' | 'dark';
        "size"?: TextSize;
        "type"?: 'block' | 'inline';
        "weight"?: 'normal' | 'bold';
    }
    interface IntrinsicElements {
        "ui-button": UiButton;
        "ui-hamburger-button": UiHamburgerButton;
        "ui-header": UiHeader;
        "ui-logo": UiLogo;
        "ui-nav": UiNav;
        "ui-nav-item": UiNavItem;
        "ui-text": UiText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ui-button": LocalJSX.UiButton & JSXBase.HTMLAttributes<HTMLUiButtonElement>;
            "ui-hamburger-button": LocalJSX.UiHamburgerButton & JSXBase.HTMLAttributes<HTMLUiHamburgerButtonElement>;
            "ui-header": LocalJSX.UiHeader & JSXBase.HTMLAttributes<HTMLUiHeaderElement>;
            "ui-logo": LocalJSX.UiLogo & JSXBase.HTMLAttributes<HTMLUiLogoElement>;
            "ui-nav": LocalJSX.UiNav & JSXBase.HTMLAttributes<HTMLUiNavElement>;
            "ui-nav-item": LocalJSX.UiNavItem & JSXBase.HTMLAttributes<HTMLUiNavItemElement>;
            "ui-text": LocalJSX.UiText & JSXBase.HTMLAttributes<HTMLUiTextElement>;
        }
    }
}
